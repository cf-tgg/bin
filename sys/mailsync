#!/bin/sh
# -*- mode: sh; -*- vim: ft=sh:ts=2:sw=2:norl:et:
# Time-stamp: <2025-08-08 17:02:49 cf>
# cf [Linux 6.15.4-zen2-1-zen x86_64 GNU/Linux]

MBX="${MAIL:-$HOME/.local/mail}/sshchat"
NEW="$MBX/new"
CUR="$MBX/cur"
STATE_DIR="${XDG_STATE_HOME:-$HOME/.local/state}"
STATE_FILE="$STATE_DIR/smscheck.last"

MSG="$HOME/.local/mail/ssh-msg.log"
HST="$HOME/.local/var/log/ssh-chat.log"
CHT="$MBX/new/$(date +"%F_%H%M%S")"

BLKSIG=19
BLKICON="/tmp/msgboxicon"

# Cleanup empty files from MAILBOX
find "$MBX" -type f -empty -exec rm -f {} \; >/dev/null 2>&1

mkdir -p "$NEW" "$CUR" "$STATE_DIR"

updateicon() {
    blksig=${BLKSIG:-19}
    iconf=${BLKICON:-"/tmp/msgboxicon"}
    echo "$1" > "$iconf"
    (
        pkill -RTMIN+"$blksig" dwmblocks 2>/dev/null || { pgrep dwmblocks | xargs -r kill -$((blksig+34)) 2>/dev/null ; }
    ) || notify-send -i "$HOME/Pictures/icon/dunst_icons/handup.png" -t 2000 "Ã§a sonne..." 2>/dev/null
}

ding() {
    speaker-test -t wav -w ding.wav -l 1 >/dev/null 2>&1
}

rotchat() {
    a="$1" ; b="$2" ; c="$3"
    diff "$a" "$b" | sed -n 's/^< //p' | grep -v '^[[:space:]]*$' > "$c" && cmp -s "$a" "$b" || cp -f "$a" "$b"
    ( [ "$(grep -c . "$c")" -lt 1 ] && rm -f "$c" && updateicon "" ) || updateicon "ðŸ””"
    return 0
}

# Rsync latest ssh-msg.log from primary hosts
SRC_PATH=".local/var/log/ssh-msg.log"
DEST_PATH="$MSG"
LOG_FILE="$HOME/.local/var/log/mailsync.log"
HOSTS="rpie dg3s rdg3 dg3"

for host in $HOSTS; do
    if rsync -aiv "${host}:~/${SRC_PATH}" "${DEST_PATH}" >> "${LOG_FILE}" 2>&1 ; then
        break
    fi
done

# If recent (last 10s), try via jump hosts
now=$(date +%s)
case $(uname) in
    *BSD|Darwin) mtime=$(stat -f %m "$DEST_PATH" 2>/dev/null) ;;
    *)           mtime=$(stat -c %Y "$DEST_PATH" 2>/dev/null) ;;
esac

if [ "$mtime" ] && [ $((now - mtime)) -lt 10 ]; then
    for jhost in rdg3 dg3 dg3s ; do
        if rsync -e "ssh -J $jhost" -aiv rpie:~/"$SRC_PATH" "$DEST_PATH" >> "$LOG_FILE" 2>&1 ; then
            break
        fi
    done
fi

# --- NEW: process ssh-msg.log for new content in last 60s ---
case $(uname) in
    *BSD|Darwin) mtime=$(stat -f %m "$MSG" 2>/dev/null) ;;
    *)           mtime=$(stat -c %Y "$MSG" 2>/dev/null) ;;
esac

[ -f "$MSG" ] || exit 0
[ "$mtime" ] && [ $((now - mtime)) -gt 60 ] && exit 0

[ -f "$STATE_FILE" ] || { wc -l <"$MSG" >"$STATE_FILE"; exit 0; }

last_lines=$(cat "$STATE_FILE")
total_lines=$(wc -l <"$MSG")

[ "$total_lines" -le "$last_lines" ] && exit 0

tail -n $((total_lines - last_lines)) "$MSG" | while IFS= read -r line; do
    sender=$(printf '%s\n' "$line" | awk -F 'est dans la place' '{print $1}' | cut -d ']' -f2- | tr -d ' ')
    [ -n "$sender" ] || sender=$(printf '%s\n' "$line" | awk -F'] ' '{print $2}' | cut -d ':' -f1 | tr -d ' ')
    [ -z "$sender" ] && sender="unknown"

    ts=$(date +%s)
    file_ts=$(date -u -R)

    {
        printf 'From: %s <sshchat@localhost>\n' "$sender"
        printf 'To: %s@localhost\n' "$USER"
        printf 'Subject: New message from %s\n' "$sender"
        printf 'Date: %s\n' "$file_ts"
        printf 'Message-ID: <%s.%s@localhost>\n' "$ts" "$sender"
        printf 'Content-Type: text/plain; charset=UTF-8\n'
        printf '\n'
        printf '%s\n' "$line"
    } > "$NEW/$sender.$ts"
done

printf '%s\n' "$total_lines" >"$STATE_FILE"

# If new files appeared, ding + icon
if find "$NEW" -type f -newermt "1 minute ago" | grep -q .; then
    ding
    updateicon "ðŸ””"
else
    updateicon ""
fi

# Cleanup empty files from cur/
find "$CUR" -type f -empty -exec rm -f {} \; >/dev/null 2>&1

exit 0
