#!/bin/sh
# Appends links from selected thumbnails embeded data to mpv socket and playlistfile.

YTV_PLAYLIST="$HOME/.cache/ytviewer/ytv.m3u8"
TITLES="$HOME/.cache/ytviewer/ytv.titles"
MPV_SOCK="/tmp/ytv.sock"
PLAYLIST="$HOME/Videos/playlists/adhoc/playlist_$(date +"%Y-%m-%d_%H%M-%S").m3u8"
export YTV_PLAYLIST

[ -f "$TITLES" ] || touch "$TITLES"
[ -f "$YTV_PLAYLIST" ] || touch "$YTV_PLAYLIST"

# Function to append links to mpv via its socket
to_mpv_sock() {
    PLAYLIST="$1"
    if [ ! -S "$MPV_SOCK" ] || [ ! -w "$MPV_SOCK" ]; then
        echo "Error: MPV socket is missing or not writable." >&2
        return 1
    fi
    grep -E "^http*" "$PLAYLIST" | while read -r url; do
        echo '{"command": ["loadfile", "'"$url"'", "append"]}' | socat - "$MPV_SOCK" || {
            echo "Warning: Failed to send $url to mpv." >&2
            continue
        }
    done || return 1 ;
    return 0
}

# Find and display all embedded linked thumbnails in custom fzf previewer, pipe selection to both mpvq playlist and tmp playlist.
find "$HOME/Videos/yt/YTVsearch/" -type l -print0 | ueytv | xargs -0 -I{} exifjpg -M "{}" 2>/dev/null | tee -a "$YTV_PLAYLIST" >"$PLAYLIST"

# Ensure playlist has proper HLS header for reading as standalone playlist.
[ $(wc -l < "$PLAYLIST") -gt 0 ] || { rm "$PLAYLIST" -f ; exit 1 ; }

[ "$(head -n1 "$PLAYLIST")" = "#EXTM3U" ] || sed -i "1i #EXTM3U" "$PLAYLIST"
echo "$PLAYLIST" | xclip -selection clipboard
echo "$PLAYLIST created piped to clipboard. Checking for mpv socket.."

# Check if mpv is running and socket is valid before attempting communication
if [ -n "$(pgrep mpv >/dev/null)" ] && [ -S "$MPV_SOCK" ]; then
    if to_mpv_sock "$PLAYLIST"; then
        grep -E "^#EXTINF" "$YTV_PLAYLIST" | while read -r e; do
            echo "$e" | cut -d: -f2- | cut -d, -f2- | sed 's/,[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}$//'
        done >"$TITLES" || {
            echo "Error: Failed to update playlist titles." >&2 ;
            exit 1 ;
        }
        pkill -RTMIN+13 "${STATUSBAR:-dwmblocks}"
        exit 0
    else
        echo "Falling back to linkhandler due to mpv socket error." >&2
        linkhandler "$PLAYLIST" || exit 1
        exit 0;
    fi
else
    echo "MPV not running or socket missing, using linkhandler." >&2
    linkhandler "$PLAYLIST" || exit 1
    exit 0;
fi
