#!/bin/sh

AUDIO_SOURCE=$(pactl list short sources | grep RUNNING | awk '{print $2}')

SCRN="$1"

dspy() { xrandr | grep 'mm' | awk '{if ($3 == "primary") {print $1, $4} else {print $1, $3}}' ; }

if [ "$SCRN" = "all" ]; then
    size(){ dspy | grep "$1" | awk '{print $2}' ; }
    DVC=$(dspy | wc -l)
    DEV=$(v4l2-ctl --list-devices | grep -Eo 'video[0-9]' | cut -d'o' -f2 | sort -u | tail -n "$DVC")
    dv=$(v4l2-ctl --list-devices | grep -Eo 'video[0-9]' | cut -d'o' -f2 | sort -u | tail -n 1)

    clean() {
      echo "Cleaning up all background processes..."
      kill $(jobs -p) 2>/dev/null
    }

    trap clean EXIT

    dspy | awk '{print $1}' | while read -r dp; do
      res=$(size "$dp" | cut -d+ -f1)
      pos="$(size "$dp" | cut -d+ -f2),$(size "$dp" | cut -d+ -f3)"

      setsid -f ffmpeg -f x11grab -s "$res" -i :0.0+"$pos" -f v4l2 /dev/video"$dv" &
      ffmpeg_pid=$!
      echo "Started ffmpeg (pid: $ffmpeg_pid) for display: $dp"
      setsid -f mpv av://v4l2:/dev/video"$dv" --load-scripts=no --no-resume-playback --profile=low-latency --untimed --title="$dp" &
      mpv_pid=$!
      echo "Started mpv (pid: $mpv_pid) for display: $dp"
      dv=$((dv - 1))
      trap "kill $ffmpeg_pid $mpv_pid 2>/dev/null" EXIT
    done
else
    [ "$SCRN" = "" ] && printf "Quel Ã©cran? (%s)\n" "$(dspy | awk '{printf "%s, ", $1}' | sed 's/, $//')"
    read -r SCRN
    size(){ dspy | grep "$SCRN" | awk '{print $2}' ; }
    RES=$(size | cut -d+ -f1)
    POS="$(size | cut -d+ -f2),$(size | cut -d+ -f3)"
    DEV=$(v4l2-ctl --list-devices | grep -Eo 'video[0-9]' | cut -d'o' -f2 | sort -u |tail -n1)
    # echo "$SCRN, $RES, $POS, $DEV"
    ffmpeg -f x11grab -s "$RES" -i :0.0+"$POS" -f v4l2 /dev/video"$DEV" &
    trap 'kill $!' EXIT
    sleep 1
    mpv av://v4l2:/dev/video"$DEV" --load-scripts=no --no-resume-playback --profile=low-latency --untimed --title="$SCRN"
    # eDPID=$(xdotool search --onlyvisible --class "mpv"); echo "$eDPID;eDP" >> .windowList
fi
