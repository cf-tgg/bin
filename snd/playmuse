#!/bin/sh

setlang() {
  lang="$(setxkbmap -query | grep -oP 'layout:\s*\K\w+')"
  [ "$lang" = "us" ] && LANGUAGE="en"
  [ "$lang" = "ca" ] && LANGUAGE="fr"
  echo "$LANGUAGE"
  notify-send "$LANGUAGE"
}

OPTIONS="s:l:"
LONGOPTS="simple,language:"
POPT=$(getopt --options="$OPTIONS" --longoptions="$LONGOPTS" -- "$@")
eval set -- "$POPT"

while true; do
  case "$1" in
    -s|--simple) SIMPLE=0;;
    -l|--language) LANGUAGE="$2"; shift;;
    --) shift; break;;
    *) echo "Invalid option $1" >&2; exit 1;;
  esac
  shift
done

LANGUAGE=${LANGUAGE:-$(setlang)}

[ -z "$SIMPLE" ] && SIMPLE=$(cat /sys/class/power_supply/AC/online)

# Set VOSKDIR based on the options
if [ "$SIMPLE" = 0 ]; then
  if [ "$LANGUAGE" = "en" ]; then
    VOSKDIR="$HOME/.local/share/kdenlive/speechmodels/vosk-model-small-en-us-0.15/"
  elif [ "$LANGUAGE" = "fr" ]; then
    VOSKDIR="$HOME/.local/share/kdenlive/speechmodels/vosk-model-small-fr-0.22/"
  fi
else
  if [ "$LANGUAGE" = "en" ]; then
    VOSKDIR="$HOME/.local/share/kdenlive/speechmodels/vosk-model-en-us-0.22/"
  elif [ "$LANGUAGE" = "fr" ]; then
    VOSKDIR="$HOME/.local/share/kdenlive/speechmodels/vosk-model-fr-0.22/"
  fi
fi

TITLES="$HOME/.cache/mpd-title"
STREAMS="$HOME/.cache/mpd-streams"
HISTORY="$HOME/Downloads/albums/history.playmuse"
INVINST="https://vid.puffyan.us"
PLAYLIST="$HOME/.config/mpd/playlists/streams.m3u"

SCOUNT=$(wc -l < "$STREAMS")
TCOUNT=$(wc -l < "$TITLES")

mpc_repeat_on() { mpc status | grep -q 'repeat: on' || mpc repeat on >/dev/null ; }
mpc_playlist_counts() { mpc-playlist | wc -l ; }
mpc_state() { mpc status | grep -E 'playing|paused' ; }
title_list() { [ "$(mpc_playlist_counts)" -gt 1 ] && mpc-playlist | nl || mpc-playlist ; }

trim_blanks() {
  sed -i '/^$/d' "$TITLES"
  sed -i '/^$/d' "$STREAMS"
}

CURRIDX=$(mpc_playlist_counts | cut -d'/' -f1)
PLCOUNT=$(mpc_playlist_counts | cut -d'/' -f2)

if [ "$SCOUNT" -ne "$PLCOUNT" ]; then
  [ "$PLCOUNT" -lt 1 ] && mpc clear >/dev/null
  mpc add < "$STREAMS" && mpc play "$PLCOUNT"
fi

updateicon() {
	echo "$1" > /tmp/recordingicon
	pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
}

record() {
  updateicon "üéôÔ∏è" && wpctl set-volume @DEFAULT_AUDIO_SINK@ 15%-
  ffmpeg -y -f alsa -ac 1 -i hw:1 -c:a flac -t 4 ~/.cache/audio.flac
  updateicon "" && wpctl set-volume @DEFAULT_AUDIO_SINK@ 15%+
  pkill -RTMIN+9 "${STATUSBAR:-dwmblocks}"
}

# record and convert to text
record && vosk-transcriber -m "$VOSKDIR" -i ~/.cache/audio.flac -o ~/.cache/audio.txt
read -r audio_in < ~/.cache/audio.txt
echo "$audio_in" >> "$HOME/Downloads/albums/playmuse.log" &

# yt query
query="$(printf "%s" "song audio $audio_in" | tr ' ' '+' )"
id="$(curl -s "$INVINST/search?q=$query" | grep -Eo "/watch\?v=.{11}" | head -n1)"
url="https://youtube.com$id"

# fetch bestaudio stream
aurl="$(yt-dlp -q --no-warnings --skip-download -f bestaudio --get-url "$url")"
title=$(yt-dlp -q --no-warnings --skip-download --get-title "$url"|sed -E 's/\([Ff]ull [Aa]lbum\)/-/g; s/\( [Ff]ull [Aa]lbum \)/-/g; s/[Ff]ull [Aa]lbum//g;s/\{\}/-/g;s/  / /g;s/ $//; s/-$//;'| sed -E 's/(\s|^)(18[0-9]{2}|19[0-9]{2}|20[0-9]{2})(\s|$)/\1(\2)\3/g'| sed 's/\xE2\x80\xB9\x0332//g' | perl -CSD -pe 's/\x{0332}//g')
duration=$(yt-dlp -q --no-warnings --skip-download --get-duration "$url")
uid=${id#/watch\?v=}

ytdlp_track_duration() { [ -n "$duration" ] && echo "$duration" | awk -F: '{print ($1 * 60) + $2}' ; }

mpc_extinf() {
  track_seconds=$(ytdlp_track_duration)
  [ -n "$track_seconds" ] && [ -n "$title" ] && [ -n "$uid" ] || return 1
  echo "#EXTINF:Duration,Title,ID" | tee -a "$PLAYLIST" &
  echo "#EXTINF:$track_seconds,$title,$uid" | tee -a "$PLAYLIST" &
  echo "$aurl" | tee -a "$PLAYLIST" &
  return 0
}

echo "$title" | tee -a "$TITLES" &
echo "$aurl" | tee -a "$STREAMS" &
mpc add "$aurl"
mpc status | grep -qE 'playing' || mpc play

mpc_repeat_on; trim_blanks;
notify-send "$title" "$(title_list)" &
mpc_extinf &
grep -qE "^$url*" "$HISTORY" || echo "$url # $uid # $title" >> "$HISTORY"

exit 0
