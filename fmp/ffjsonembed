#!/bin/sh
# -*- mode: sh; sh-shell: sh; -*- vim: ft=sh:ts=2:sw=2:et:

FAIL_LOG="$HOME/.local/var/log/ffjsonembed_failed.log"

ffjsonembed() {
    file="$1"
    info_json="$2"
    dldate=$(date +"%Y-%m-%d %H:%M:%S")
    cf="~cf."
    json_file="${info_json%.info.json}.json"
    jq '.' -r "$info_json" | jq --arg uri "$LINK" \
        --arg dldate "$dldate" --arg cf "$cf" '
            {
                Title: .title,
                Date: .upload_date,
                Duration: .duration_string,
                URI: (.webpage_url // $uri),
                ID: .id,
                Thumbnail: .thumbnail,
                Description: .description,
                Uploader: .uploader,
                Resolution: .resolution,
                LikeCount: .like_count,
                ViewCount: .view_count,
                CommentCount: .comment_count,
                Channel: .channel,
                ChannelFollowerCount: .channel_follower_count,
                ChannelURL: .channel_url,
                ChannelID: .channel_id,
                UploaderID: .uploader_id,
                UploaderURL: .uploader_url,
                UploadDate: .upload_date,
                Timestamp: .timestamp,
                Playlist: (.playlist? // ""),
                PlaylistIndex: (.playlist_index? // ""),
                Subtitles: (.subtitles | {english: (.en? // []), french: (.fr? // [])}),
                Categories: (.categories[]?| select(. != "")),
                Tags: [ .tags[]?| select(. != "") ],
                Chapters: [ .chapters[]? | {start_time, title} ],
                Comments: (
                .comments | map(select(
                .author_is_uploader == true
                or .is_pinned == true
                or .like_count >= 10
                or .text != ""))
                | sort_by(.timestamp)
                | reverse
                | .[:100]
                | map({
                id: .id,
                author: .author,
                author_thumbnail: .author_thumbnail,
                author_url: .author_url,
                since: ._time_text,
                timestamp: .timestamp,
                text: .text,
                like_count: .like_count,
                is_pinned: .is_pinned,
                author_is_uploader: .author_is_uploader
            })),
            DownloadDate: $dldate,
            Signature: $cf
        }' >"$json_file"
    ext="${file##*.}"
    title=$(basename "$file" ".$ext")
    tmp_file="$title.tmp.$ext"
    json_data=$(jq '.' -r "$json_file")
    ffmpeg -i "$file" -metadata comment="$json_data" -codec copy "$tmp_file" 2>"$title.log"
    [ -f "$tmp_file" ] && mv "$tmp_file" "$file" -f && echo "$title metadata embeded"
    [ -f "$title.jpg" ] && embedjson "$json_file" "$title.jpg" && rm "$json_file" "$info_json"
    return 0;
}

if [ $# -eq 2 ]; then
     ffjsonembed "$1" "$2" || { echo -e "Something went wrong..\n FILE: $1\nINFO JSON: $2" >&2 ; exit 1 ; }
else
    for j in in "*.info.json" ; do
        n=${j%.info.json} ; f=$(find . -type f -name "$n.*" | grep -vE '.info.json' | fzf)
        [ -f "$f" ] && ffjsonembed "$f" "$j" || printf "FAILED\t%s\t%s\n" "$f" "$j" >"$FAIL_LOG" 2>&1
    done
fi

exit 0
