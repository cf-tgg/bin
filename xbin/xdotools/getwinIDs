#!/bin/bash

# Clear previous list
echo "" > .windowList

# Get all window IDs from window list
xprop -root | grep '_NET_CLIENT_LIST(WINDOW): window id #' | tr -d ',' | awk '{for(i=5;i<=NF;i++) print $i}' | while read -r win_id; do
  # Name
  window_name=$(xprop -id "$win_id" _NET_WM_NAME | sed 's/_NET_WM_NAME(UTF8_STRING) = //; s/"//g')
  # Class
  class_info=$(xprop -id "$win_id" WM_CLASS | awk -F ' = ' '{print $2}' | sed 's/^\[\(.*\)\]$/\1/; s/"//g' | cut -d ' ' -f2)
  # Output to .windowList
  echo "$win_id;$class_info;$window_name" >> .windowList
done

# Read .windowList into an array
readarray -t win_list < .windowList

# Prepare dmenu options and associate them with IDs
options=""
declare -A id_map
for entry in "${win_list[@]}"; do
  id=$(echo "$entry" | cut -d';' -f1)
  class=$(echo "$entry" | cut -d';' -f2)
  name=$(echo "$entry" | cut -d';' -f3)
  options+="$class::$name\n"
  id_map["$class::$name"]="$id"
done


if [ "$1" = "-d" ]; then
  # Display dmenu and get user selection
  selected=$(echo -e "$options"| sort -r | dmenu -i -p "Window Select: " -l 30)

  # Retrieve the ID based on the selected option
  if [[ -n "$selected" ]]; then
    window_id=${id_map["$selected"]}
    echo "$window_id"
  else
    exit 1
  fi
fi
